<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="Array&lt;*&gt;">
    <DisplayString>{{ count={count} }}</DisplayString>
    <Expand>
      <Item Name="[count]" ExcludeView="simple">count</Item>
      <Item Name="[capacity]" ExcludeView="simple">capacity</Item>
      <ArrayItems>
        <Size>count</Size>
        <ValuePointer>storage</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="SmallArray&lt;*,*&gt;">
    <DisplayString>{{ count={count} }}</DisplayString>
    <Expand>
      <Item Name="[count]" ExcludeView="simple">count</Item>
      <Item Name="[capacity]" ExcludeView="simple">capacity</Item>
      <ArrayItems>
        <Size>count</Size>
        <ValuePointer>storage ? storage : small</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="String">
    <DisplayString>{characters,[length]sb}</DisplayString>
  </Type>

  <Type Name="String_Hasher">
    <DisplayString>{characters.storage,[characters.count]sb}</DisplayString>
  </Type>

  <Type Name="Type">
    <DisplayString>{name}</DisplayString>
  </Type>

  <Type Name="Argument">
    <DisplayString>{number}</DisplayString>
  </Type>

  <Type Name="ExprFunction">
    <DisplayString Condition="valueOfDeclaration">Func{{{valueOfDeclaration->name->name}}}</DisplayString>
    <DisplayString>(function)</DisplayString>
  </Type>

  <Type Name="ExprIdentifier">
    <DisplayString Condition="structAccess">{structAccess}.{name->name}</DisplayString>
    <DisplayString>{name->name}</DisplayString>
  </Type>

  <Type Name="SubJob">
    <DisplayString >{flavor,en} {sleepReason} {sleepingOnName}</DisplayString>
  </Type>
  

  <Type Name="Ir">
    <DisplayString Condition="op == IrOp::STRING">STRING {dest} &lt;- "{((ExprStringLiteral*)data)->string}"</DisplayString>
    <DisplayString Condition="op == IrOp::CALL">CALL_{opSize*8} {dest} &lt;- {a} {&amp;((FunctionCall*)data)->args[0],[((FunctionCall*)data)->argCount]na}</DisplayString>
    <DisplayString Condition="op == IrOp::FUNCTION &amp;&amp; function->valueOfDeclaration">FUNCTION {dest} &lt;- {function->valueOfDeclaration->name}</DisplayString>
    <DisplayString Condition="op == IrOp::SET">SET_{opSize*8} {dest} &lt;- {a}</DisplayString>
    <DisplayString Condition="op == IrOp::IF_Z_GOTO || op == IrOp::IF_NZ_GOTO">{op,en}_{opSize*8} {a}, {b}</DisplayString>
    <DisplayString Condition="op == IrOp::GOTO">GOTO {b}</DisplayString>
    <DisplayString Condition="op == IrOp::TYPE">TYPE {dest} &lt;- {(Type*)data}</DisplayString>
    <DisplayString Condition="op == IrOp::READ">{op,en}_{opSize*8} {dest} &lt;- {a}:{immediate}</DisplayString>
    <DisplayString Condition="op == IrOp::WRITE">{op,en}_{opSize*8} {dest}:{immediate} {a}</DisplayString>
    <DisplayString Condition="op == IrOp::COPY">{op,en}_{opSize*8} {dest}:{immediate} {a}</DisplayString>
    <DisplayString Condition="op == IrOp::IMMEDIATE">{op,en}_{opSize*8} {dest} &lt;- {immediate}</DisplayString>
    <DisplayString Condition="op == IrOp::ADD_CONSTANT">{op,en}_{opSize*8} {dest} &lt;- {a}, {immediate}</DisplayString>
    <DisplayString Condition="op == IrOp::LINE_MARKER">L{location.start.line}</DisplayString>
    <DisplayString>{op,en}_{opSize*8} {dest} &lt;- {a}, {b}</DisplayString>
  </Type>

  <Type Name="Declaration">
    <DisplayString>Decl{{{name->name}}}</DisplayString>
  </Type>

  <Type Name="CodeLocation">
    <DisplayString>{compilerFiles.storage[fileUid]->path}:{line},{column}</DisplayString>
  </Type>

</AutoVisualizer>