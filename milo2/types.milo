Type :: struct {
    Tag :: enum u8 {
        SIGNED
        UNSIGNED
        FLOAT
        TYPE
        STRING
        VOID
        BOOL
        
        ENUM
        ENUM_FLAGS
        
        STRUCT
        
        FUNCTION
        
        STATIC_ARRAY
        ARRAY
        DYNAMIC_ARRAY
        
        POINTER
    }
    
    size      := -1
    alignment := -1
    count     := -1
    
    using _: union {
        definition: Node_Reference
        element_type: *Type = --
    }
    
    tag: Tag
}

TYPE_U8     := Type.{tag = .UNSIGNED, size = 1,  alignment = 1}
TYPE_U16    := Type.{tag = .UNSIGNED, size = 2,  alignment = 2}
TYPE_U32    := Type.{tag = .UNSIGNED, size = 4,  alignment = 4}
TYPE_U64    := Type.{tag = .UNSIGNED, size = 8,  alignment = 8}
TYPE_S8     := Type.{tag = .SIGNED,   size = 1,  alignment = 1}
TYPE_S16    := Type.{tag = .SIGNED,   size = 2,  alignment = 2}
TYPE_S32    := Type.{tag = .SIGNED,   size = 4,  alignment = 4}
TYPE_S64    := Type.{tag = .SIGNED,   size = 8,  alignment = 8}
TYPE_F32    := Type.{tag = .FLOAT,    size = 4,  alignment = 4}
TYPE_F64    := Type.{tag = .FLOAT,    size = 8,  alignment = 8}
TYPE_TYPE   := Type.{tag = .TYPE,     size = 8,  alignment = 8}
TYPE_STRING := Type.{tag = .STRING,   size = 16, alignment = 8}
TYPE_VOID   := Type.{tag = .VOID,     size = 0,  alignment = 1}
TYPE_BOOL   := Type.{tag = .BOOL,     size = 1,  alignment = 1}

context_unit: Unit
TYPE_CONTEXT := Type.{tag = .STRUCT}

init_types :: () {
    TYPE_CONTEXT.definition.unit = *context_unit
    TYPE_CONTEXT.definition.index = 1
    
    node: Node
    node.tag = .STRUCT
    data := new(Parse_Data_Struct)
    node.parse_data = data
    
    data.body = new(Unit)
    
    array_add(*context_unit.nodes, node)
}